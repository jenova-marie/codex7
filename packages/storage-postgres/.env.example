# üîê PostgreSQL Storage Adapter - Environment Variables
#
# Copy this file to .env and update values for your environment:
#   cp .env.example .env
#
# For Docker Compose users, these match the credentials in docker-compose.yml

# ========================================
# üêò PostgreSQL Connection (Development)
# ========================================

# Database host (use localhost for local dev)
POSTGRES_HOST=localhost

# Database port (5432 for dev, 5433 for test in docker-compose.yml)
POSTGRES_PORT=5432

# Database name
POSTGRES_DB=codex7_dev

# Database user
POSTGRES_USER=codex7

# Database password
POSTGRES_PASSWORD=codex7_dev_password

# ========================================
# üîó Database URL (Alternative)
# ========================================

# Full connection string (takes precedence over individual POSTGRES_* vars)
# Uncomment to use:
# DATABASE_URL=postgresql://codex7:codex7_dev_password@localhost:5432/codex7_dev

# ========================================
# üß™ Testing Database
# ========================================

# Test database (used by integration tests)
# Runs on port 5433 in docker-compose.yml
TEST_DATABASE_URL=postgresql://codex7_test:codex7_test_password@localhost:5433/codex7_test

# ========================================
# üìä Logging & Environment
# ========================================

# Environment: development, staging, production
NODE_ENV=development

# Wonder Logger configuration file (optional)
WONDER_LOGGER_CONFIG=wonder-logger.yaml

# ========================================
# üìù Quick Start
# ========================================
#
# 1. Start databases:
#    docker compose up -d
#
# 2. Run migrations:
#    pnpm migrate
#
# 3. Run tests:
#    pnpm test
#
# 4. Run integration tests:
#    pnpm test:integration
#
# 5. View pgAdmin (optional):
#    docker compose --profile tools up -d
#    Open http://localhost:5050
#    Email: admin@codex7.local
#    Password: admin
