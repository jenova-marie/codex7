# üê≥ Docker Compose - Local Development
#
# Services for running Codex7 locally
#
# Usage:
#   docker-compose up -d          # Start all services
#   docker-compose logs -f        # View logs
#   docker-compose down           # Stop services
#   docker-compose down -v        # Stop and remove volumes

version: '3.9'

services:
  # üêò PostgreSQL Database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: codex7-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-codex7}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-codex7_dev_password}
      POSTGRES_DB: ${POSTGRES_DB:-codex7}
      POSTGRES_INITDB_ARGS: '-E UTF8 --locale=en_US.UTF-8'
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U codex7']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - codex7-network

  # üî¥ Redis - Job queue and caching
  redis:
    image: redis:7-alpine
    container_name: codex7-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-codex7_redis_password}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - codex7-network

  # üì° MCP Server
  mcp-server:
    build:
      context: .
      dockerfile: packages/mcp-server/Dockerfile
      target: development
    container_name: codex7-mcp-server
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-codex7}:${POSTGRES_PASSWORD:-codex7_dev_password}@postgres:5432/${POSTGRES_DB:-codex7}
      REDIS_URL: redis://:${REDIS_PASSWORD:-codex7_redis_password}@redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
    ports:
      - '${MCP_PORT:-3000}:3000'
    volumes:
      - ./packages/mcp-server/src:/app/packages/mcp-server/src:ro
      - ./packages/shared/src:/app/packages/shared/src:ro
      - mcp_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - codex7-network

  # üåê REST API
  api:
    build:
      context: .
      dockerfile: packages/api/Dockerfile
      target: development
    container_name: codex7-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: postgresql://${POSTGRES_USER:-codex7}:${POSTGRES_PASSWORD:-codex7_dev_password}@postgres:5432/${POSTGRES_DB:-codex7}
      REDIS_URL: redis://:${REDIS_PASSWORD:-codex7_redis_password}@redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-dev_jwt_secret_change_in_production}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:5173}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
    ports:
      - '${API_PORT:-4000}:4000'
    volumes:
      - ./packages/api/src:/app/packages/api/src:ro
      - ./packages/shared/src:/app/packages/shared/src:ro
      - api_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - codex7-network

  # üîç Document Indexer
  indexer:
    build:
      context: .
      dockerfile: packages/indexer/Dockerfile
      target: development
    container_name: codex7-indexer
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-codex7}:${POSTGRES_PASSWORD:-codex7_dev_password}@postgres:5432/${POSTGRES_DB:-codex7}
      REDIS_URL: redis://:${REDIS_PASSWORD:-codex7_redis_password}@redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      INDEXER_CONCURRENCY: ${INDEXER_CONCURRENCY:-5}
    volumes:
      - ./packages/indexer/src:/app/packages/indexer/src:ro
      - ./packages/shared/src:/app/packages/shared/src:ro
      - indexer_logs:/app/logs
      - indexer_cache:/app/cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - codex7-network

  # üé® Web UI (Development)
  web:
    build:
      context: .
      dockerfile: packages/web/Dockerfile
      target: development
    container_name: codex7-web
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_URL: ${VITE_API_URL:-http://localhost:4000}
    ports:
      - '${WEB_PORT:-5173}:5173'
    volumes:
      - ./packages/web/src:/app/packages/web/src
      - ./packages/web/public:/app/packages/web/public
      - ./packages/shared/src:/app/packages/shared/src:ro
    depends_on:
      - api
    networks:
      - codex7-network

  # üìä pgAdmin (Optional - Database UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: codex7-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@codex7.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - codex7-network
    profiles:
      - tools

  # üìà Redis Commander (Optional - Redis UI)
  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    container_name: codex7-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-codex7_redis_password}
    ports:
      - '${REDIS_COMMANDER_PORT:-8081}:8081'
    depends_on:
      - redis
    networks:
      - codex7-network
    profiles:
      - tools

# üíæ Volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  mcp_logs:
    driver: local
  api_logs:
    driver: local
  indexer_logs:
    driver: local
  indexer_cache:
    driver: local

# üåê Networks
networks:
  codex7-network:
    driver: bridge
    name: codex7-network
